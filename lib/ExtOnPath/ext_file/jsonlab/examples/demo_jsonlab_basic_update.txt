
%=================================================
%  a simple scalar value 
%=================================================


data2json =

    3.1416


ans =

[3.141592654]



json2data =

    3.1416


iseq =

     0


maxdiff =

   4.1021e-10


%=================================================
%  a complex number
%=================================================


data2json =

   1.0000 + 2.0000i


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [1,1],
	"_ArrayIsComplex_": 1,
	"_ArrayData_": [1,2]
}



json2data =

   1.0000 + 2.0000i


iseq =

     1


maxdiff =

     0


%=================================================
%  a complex matrix
%=================================================


data2json =

  35.0000 +26.0000i   1.0000 +19.0000i   6.0000 +24.0000i
   3.0000 +21.0000i  32.0000 +23.0000i   7.0000 +25.0000i
  31.0000 +22.0000i   9.0000 +27.0000i   2.0000 +20.0000i
   8.0000 +17.0000i  28.0000 +10.0000i  33.0000 +15.0000i
  30.0000 +12.0000i   5.0000 +14.0000i  34.0000 +16.0000i
   4.0000 +13.0000i  36.0000 +18.0000i  29.0000 +11.0000i


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [6,3],
	"_ArrayIsComplex_": 1,
	"_ArrayData_": [
		[35,26],
		[3,21],
		[31,22],
		[8,17],
		[30,12],
		[4,13],
		[1,19],
		[32,23],
		[9,27],
		[28,10],
		[5,14],
		[36,18],
		[6,24],
		[7,25],
		[2,20],
		[33,15],
		[34,16],
		[29,11]
	]
}



json2data =

  35.0000 +26.0000i   1.0000 +19.0000i   6.0000 +24.0000i
   3.0000 +21.0000i  32.0000 +23.0000i   7.0000 +25.0000i
  31.0000 +22.0000i   9.0000 +27.0000i   2.0000 +20.0000i
   8.0000 +17.0000i  28.0000 +10.0000i  33.0000 +15.0000i
  30.0000 +12.0000i   5.0000 +14.0000i  34.0000 +16.0000i
   4.0000 +13.0000i  36.0000 +18.0000i  29.0000 +11.0000i


iseq =

     1


maxdiff =

     0


%=================================================
%  MATLAB special constants
%=================================================


data2json =

   NaN   Inf  -Inf


ans =

["_NaN_","_Inf_","-_Inf_"]



json2data =

   NaN   Inf  -Inf


iseq =

     0


%=================================================
%  a real sparse matrix
%=================================================


data2json =

   (8,1)       0.3932
   (9,1)       0.5915
   (3,2)       0.9943
   (2,3)       0.1708
   (5,3)       0.3400
   (3,7)       0.4398
   (5,9)       0.3142
   (9,9)       0.1197
   (6,10)      0.3651


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [10,10],
	"_ArrayIsSparse_": 1,
	"_ArrayData_": [
		[8,1,0.3932395512],
		[9,1,0.5915252037],
		[3,2,0.9942954905],
		[2,3,0.1707928137],
		[5,3,0.3400479489],
		[3,7,0.4397908569],
		[5,9,0.3142173105],
		[9,9,0.119746617],
		[6,10,0.3650783869]
	]
}



json2data =

   (8,1)       0.3932
   (9,1)       0.5915
   (3,2)       0.9943
   (2,3)       0.1708
   (5,3)       0.3400
   (3,7)       0.4398
   (5,9)       0.3142
   (9,9)       0.1197
   (6,10)      0.3651


iseq =

     0


maxdiff =

   (1,1)      4.8192e-11


%=================================================
%  a complex sparse matrix
%=================================================


data2json =

   (8,1)      0.3932 - 0.3932i
   (9,1)      0.5915 - 0.5915i
   (3,2)      0.9943 - 0.9943i
   (2,3)      0.1708 - 0.1708i
   (5,3)      0.3400 - 0.3400i
   (3,7)      0.4398 - 0.4398i
   (5,9)      0.3142 - 0.3142i
   (9,9)      0.1197 - 0.1197i
   (6,10)     0.3651 - 0.3651i


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [10,10],
	"_ArrayIsComplex_": 1,
	"_ArrayIsSparse_": 1,
	"_ArrayData_": [
		[8,1,0.3932395512,-0.3932395512],
		[9,1,0.5915252037,-0.5915252037],
		[3,2,0.9942954905,-0.9942954905],
		[2,3,0.1707928137,-0.1707928137],
		[5,3,0.3400479489,-0.3400479489],
		[3,7,0.4397908569,-0.4397908569],
		[5,9,0.3142173105,-0.3142173105],
		[9,9,0.119746617,-0.119746617],
		[6,10,0.3650783869,-0.3650783869]
	]
}



json2data =

   (8,1)      0.3932 - 0.3932i
   (9,1)      0.5915 - 0.5915i
   (3,2)      0.9943 - 0.9943i
   (2,3)      0.1708 - 0.1708i
   (5,3)      0.3400 - 0.3400i
   (3,7)      0.4398 - 0.4398i
   (5,9)      0.3142 - 0.3142i
   (9,9)      0.1197 - 0.1197i
   (6,10)     0.3651 - 0.3651i


iseq =

     0


maxdiff =

   (1,1)      6.8153e-11


%=================================================
%  an all-zero sparse matrix
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [2,3],
	"_ArrayIsSparse_": 1,
	"_ArrayData_": null
}



json2data =

   All zero sparse: 2-by-3


iseq =

     1


maxdiff =

   All zero sparse: 1-by-1


%=================================================
%  an empty sparse matrix
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [0,0],
	"_ArrayIsSparse_": 1,
	"_ArrayData_": null
}



json2data =

   All zero sparse: 0-by-0


iseq =

     1


%=================================================
%  an empty 0-by-0 real matrix
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [0,0],
	"_ArrayData_": null
}



json2data =

     []


iseq =

     1


%=================================================
%  an empty 0-by-3 real matrix
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [0,3],
	"_ArrayData_": null
}



json2data =

   Empty matrix: 0-by-3


iseq =

     1


%=================================================
%  a sparse real column vector
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [5,1],
	"_ArrayIsSparse_": 1,
	"_ArrayData_": [
		[2,3],
		[4,1],
		[5,4]
	]
}



json2data =

   (2,1)        3
   (4,1)        1
   (5,1)        4


iseq =

     1


maxdiff =

   All zero sparse: 1-by-1


%=================================================
%  a sparse complex column vector
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [5,1],
	"_ArrayIsComplex_": 1,
	"_ArrayIsSparse_": 1,
	"_ArrayData_": [
		[2,3,-3],
		[4,1,-1],
		[5,4,-4]
	]
}



json2data =

   (2,1)      3.0000 - 3.0000i
   (4,1)      1.0000 - 1.0000i
   (5,1)      4.0000 - 4.0000i


iseq =

     1


maxdiff =

   All zero sparse: 1-by-1


%=================================================
%  a sparse real row vector
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [1,5],
	"_ArrayIsSparse_": 1,
	"_ArrayData_": [
		[2,3],
		[4,1],
		[5,4]
	]
}



json2data =

   (1,2)        3
   (1,4)        1
   (1,5)        4


iseq =

     1


maxdiff =

   All zero sparse: 1-by-1


%=================================================
%  a sparse complex row vector
%=================================================


ans =

{
	"_ArrayType_": "double",
	"_ArraySize_": [1,5],
	"_ArrayIsComplex_": 1,
	"_ArrayIsSparse_": 1,
	"_ArrayData_": [
		[2,3,-3],
		[4,1,-1],
		[5,4,-4]
	]
}



json2data =

   (1,2)      3.0000 - 3.0000i
   (1,4)      1.0000 - 1.0000i
   (1,5)      4.0000 - 4.0000i


iseq =

     1


maxdiff =

   All zero sparse: 1-by-1


%=================================================
%  a structure
%=================================================


data2json = 

        name: 'Think Different'
        year: 1997
       magic: [3x3 double]
     misfits: [Inf NaN]
    embedded: [1x1 struct]


ans =

{
	"name": "Think Different",
	"year": 1997,
	"magic": [
		[8,1,6],
		[3,5,7],
		[4,9,2]
	],
	"misfits": ["_Inf_","_NaN_"],
	"embedded": {
		"left": true,
		"right": false
	}
}



json2data = 

        name: 'Think Different'
        year: 1997
       magic: [3x3 double]
     misfits: [Inf NaN]
    embedded: [1x1 struct]


iseq =

     0


%=================================================
%  a structure array
%=================================================


ans =

[
	{
		"name": "Nexus Prime",
		"rank": 9
	},
	{
		"name": "Sentinel Prime",
		"rank": 9
	},
	{
		"name": "Optimus Prime",
		"rank": 9
	}
]



json2data = 

    [1x1 struct]    [1x1 struct]    [1x1 struct]


iseq =

     0


%=================================================
%  a cell array
%=================================================


data2json = 

    [1x1 struct]
    [1x1 struct]
    [1x4 double]


ans =

[
	{
		"buzz": 1.10,
		"rex": 1.20,
		"bo": 1.30,
		"hamm": 2.00,
		"slink": 2.10,
		"potato": 2.20,
		"woody": 3.00,
		"sarge": 3.10,
		"etch": 4.00,
		"lenny": 5.00,
		"squeeze": 6.00,
		"wheezy": 7.00
	},
	{
		"Ubuntu": [
			"Kubuntu",
			"Xubuntu",
			"Lubuntu"
		]
	},
	[10.04,10.10,11.04,11.10]
]



json2data = 

    [1x1 struct]    [1x1 struct]    [1x4 double]


iseq =

     0


%=================================================
%  invalid field-name handling
%=================================================


json2data = 

                               ValidName: 1
                       x0x5F_InvalidName: 2
                       x0x3A_Field_0x3A_: 3
    x0xE9__0xA1__0xB9__0xE7__0x9B__0xAE_: '绝密'

